(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var SWMap, unemployment_map, unemployment_us_data;

SWMap = require('./script/SWMap');

unemployment_us_data = require('./script/stubdata/us-states-unemployment.js');

$.each(unemployment_us_data, function() {
  this.code = this.code.toUpperCase();
  return this.drilldown = true;
});

unemployment_map = new SWMap({
  data: unemployment_us_data,
  mapData: Highcharts.maps['countries/us/us-all'],
  joinBy: ['postal-code', 'code']
});

$(function() {
  return unemployment_map.attach($('#map'));
});



},{"./script/SWMap":2,"./script/stubdata/us-states-unemployment.js":3}],2:[function(require,module,exports){
var SWMap, default_opts;

default_opts = require('./sw_map_options');

SWMap = (function() {
  function SWMap(options) {
    var series;
    this.opts = default_opts;
    series = this.opts.series[0];
    series.data = options.data;
    series.mapData = options.mapData;
    series.joinBy = options.joinBy;
    this.opts.chart.events.drilldown = (function(_this) {
      return function(e) {
        return _this._handle_drilldown(e);
      };
    })(this);
    this.opts.chart.events.drillup = (function(_this) {
      return function(e) {
        return _this._handle_drillup(e);
      };
    })(this);
  }

  SWMap.prototype.attach = function($el) {
    this.chart = $el.highcharts('Map', this.opts);
    return console.log(this.chart);
  };

  SWMap.prototype._handle_drilldown = function(e) {
    var chart, mapKey, mdata_url;
    chart = e.currentTarget;
    if (!e.seriesOptions) {
      mapKey = 'countries/us/' + e.point.properties['hc-key'] + '-all';
      if (!Highcharts.maps[mapKey]) {
        mdata_url = 'http://code.highcharts.com/mapdata/' + mapKey + '.js';
        return $.getScript(mdata_url).done((function(_this) {
          return function() {
            return _this._do_drilldown(chart, e.point, mapKey);
          };
        })(this)).fail((function(_this) {
          return function() {
            return alert('failed to get map data.');
          };
        })(this));
      } else {
        return this._do_drilldown(chart, e.point, mapKey);
      }
    }
  };

  SWMap.prototype._do_drilldown = function(chart, point, mapKey) {
    var data, i, p, _i, _len;
    data = Highcharts.geojson(Highcharts.maps[mapKey]);
    for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
      p = data[i];
      p.value = i + 1;
    }
    return chart.addSeriesAsDrilldown(point, {
      name: point.name,
      data: data,
      dataLabels: {
        enabled: true,
        format: '{point.name}'
      }
    });
  };

  SWMap.prototype._handle_drillup = function(e) {
    return console.log('drill up');
  };

  return SWMap;

})();

module.exports = SWMap;



},{"./sw_map_options":4}],3:[function(require,module,exports){
module.exports = [
    {
        "value": 438,
        "code": "nj"
    },
    {
        "value": 387.35,
        "code": "ri"
    },
    {
        "value": 312.68,
        "code": "ma"
    },
    {
        "value": 271.4,
        "code": "ct"
    },
    {
        "value": 209.23,
        "code": "md"
    },
    {
        "value": 195.18,
        "code": "ny"
    },
    {
        "value": 154.87,
        "code": "de"
    },
    {
        "value": 114.43,
        "code": "fl"
    },
    {
        "value": 107.05,
        "code": "oh"
    },
    {
        "value": 105.8,
        "code": "pa"
    },
    {
        "value": 86.27,
        "code": "il"
    },
    {
        "value": 83.85,
        "code": "ca"
    },
    {
        "value": 72.83,
        "code": "hi"
    },
    {
        "value": 69.03,
        "code": "va"
    },
    {
        "value": 67.55,
        "code": "mi"
    },
    {
        "value": 65.46,
        "code": "in"
    },
    {
        "value": 63.8,
        "code": "nc"
    },
    {
        "value": 54.59,
        "code": "ga"
    },
    {
        "value": 53.29,
        "code": "tn"
    },
    {
        "value": 53.2,
        "code": "nh"
    },
    {
        "value": 51.45,
        "code": "sc"
    },
    {
        "value": 39.61,
        "code": "la"
    },
    {
        "value": 39.28,
        "code": "ky"
    },
    {
        "value": 38.13,
        "code": "wi"
    },
    {
        "value": 34.2,
        "code": "wa"
    },
    {
        "value": 33.84,
        "code": "al"
    },
    {
        "value": 31.36,
        "code": "mo"
    },
    {
        "value": 30.75,
        "code": "tx"
    },
    {
        "value": 29,
        "code": "wv"
    },
    {
        "value": 25.41,
        "code": "vt"
    },
    {
        "value": 23.86,
        "code": "mn"
    },
    {
        "value": 23.42,
        "code": "ms"
    },
    {
        "value": 20.22,
        "code": "ia"
    },
    {
        "value": 19.82,
        "code": "ar"
    },
    {
        "value": 19.4,
        "code": "ok"
    },
    {
        "value": 17.43,
        "code": "az"
    },
    {
        "value": 16.01,
        "code": "co"
    },
    {
        "value": 15.95,
        "code": "me"
    },
    {
        "value": 13.76,
        "code": "or"
    },
    {
        "value": 12.69,
        "code": "ks"
    },
    {
        "value": 10.5,
        "code": "ut"
    },
    {
        "value": 8.6,
        "code": "ne"
    },
    {
        "value": 7.03,
        "code": "nv"
    },
    {
        "value": 6.04,
        "code": "id"
    },
    {
        "value": 5.79,
        "code": "nm"
    },
    {
        "value": 3.84,
        "code": "sd"
    },
    {
        "value": 3.59,
        "code": "nd"
    },
    {
        "value": 2.39,
        "code": "mt"
    },
    {
        "value": 1.96,
        "code": "wy"
    },
    {
        "value": 0.42,
        "code": "ak"
    }
];
},{}],4:[function(require,module,exports){
module.exports = {
  chart: {
    borderWidth: 0,
    borderColor: '#759F00',
    events: {
      drilldown: null,
      drillup: null
    }
  },
  title: {
    text: 'Waiverites'
  },
  legend: {
    layout: 'vertical',
    borderWidth: 0,
    backgroundColor: 'rgba(255,255,255,0.85)',
    floating: false,
    verticalAlign: 'middle',
    align: 'left',
    y: 50
  },
  mapNavigation: {
    enabled: true
  },
  colorAxis: {
    min: 1,
    type: 'logarithmic',
    minColor: '#FFFFFF',
    maxColor: '#759F00'
  },
  series: [
    {
      animation: {
        duration: 1000
      },
      data: null,
      mapData: null,
      joinBy: null,
      dataLabels: {
        enabled: true,
        color: 'white',
        format: '{point.code}'
      },
      name: 'US',
      tooltip: {
        pointFormat: '{point.code}: {point.value}/kmÂ²'
      }
    }
  ],
  drilldown: {
    activeDataLabelStyle: {
      color: 'white',
      textDecoration: 'none'
    },
    drillUpButton: {
      relativeTo: 'spacingBox',
      position: {
        x: 0,
        y: 0
      }
    }
  }
};



},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
